<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tairui.function.mapper.KeyMapper">

    <resultMap type="Key" id="KeyResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="position" column="position"/>
        <result property="usageLocation" column="usageLocation"/>
        <result property="tag" column="tag"/>
        <result property="currentTag" column="currentTag"/>
        <result property="status" column="status"/>
        <result property="controlPanelAddress" column="controlPanelAddress"/>
        <result property="circuitPanelAddress" column="circuitPanelAddress"/>
        <result property="createAt" column="createAt"/>
        <result property="lastControlUserId" column="lastControlUserId"/>
        <result property="srttings" column="srttings"/>
        <result property="lastControlUser" column="lastControlUser"/>
        <result property="srttingsName" column="srttingsName"/>
        <result property="userNames" column="user_names"/>
        <result property="userId" column="user_id"/>
    </resultMap>


    <sql id="selectKeyVo">
        SELECT id,
               name,
               code,
               position,
               usageLocation,
               tag,
               currentTag,
               status,
               controlPanelAddress,
               circuitPanelAddress,
               createAt,
               srttings,
               lastControlUser,
               srttingsName,
               user_names,
               user_id
        FROM (SELECT k.id,
                     NULLIF(k.NAME, '未命名钥匙')                                    AS name,
                     NULLIF(k.CODE, '未命名编号')                                    AS code,
                     k.position,
                     k.usageLocation,
                     k.tag,
                     k.currentTag,
                     k.status,
                     k.controlPanelAddress,
                     k.circuitPanelAddress,
                     k.createAt,
                     k.srttings,
                     CASE WHEN k.STATUS = 'borrowed' THEN u.NAME END                 AS lastControlUser,
                     s.cabinetName                                                   AS srttingsName,
                     COALESCE(GROUP_CONCAT(DISTINCT ku_user.NAME SEPARATOR ','), '') AS user_names,
                     COALESCE(GROUP_CONCAT(DISTINCT ku_user.id SEPARATOR ','), '')   AS user_id
              FROM `key` k
                       LEFT JOIN `user` u
                                 ON k.lastControlUserId = u.id
                       LEFT JOIN system_settings s
                                 ON k.srttings = s.id
                       LEFT JOIN key_user ku
                                 ON k.id = ku.keyId
                       LEFT JOIN `user` ku_user
                                 ON ku.userId = ku_user.id
              GROUP BY k.id) AS a

    </sql>

    <select id="selectAllKey" resultMap="KeyResult">
        select *
        from key;
    </select>
    <select id="selectKeyList" parameterType="Key" resultMap="KeyResult">
        <include refid="selectKeyVo"/>
        <where>
            <if test="name != null  and name != ''">and a.name like concat('%', #{name}, '%')</if>
            <if test="code != null  and code != ''">and a.code like concat('%', #{code}, '%')</if>
            <if test="status != null  and status != ''">and a.status = #{status}</if>
            <if test="srttings != null and srttings != ''">and a.srttings = #{srttings}</if>
            <if test="lastControlUser != null  and lastControlUser != ''">and a.lastControlUser like concat('%',
                #{lastControlUser}, '%')
            </if>
            <if test="srttingsName != null  and srttingsName != ''">and a.srttingsName like concat('%', #{srttingsName},
                '%')
            </if>
            <if test="userNames != null  and userNames != ''">and a.user_names like concat('%', #{userNames}, '%')</if>

        </where>
        ORDER BY
        CAST(COALESCE(a.srttings, '') AS UNSIGNED) ASC,
        CAST(COALESCE(a.position, '') AS UNSIGNED) ASC
    </select>

    <select id="selectKeyById" parameterType="Long" resultMap="KeyResult">
        <include refid="selectKeyVo"/>
        where a.id = #{id}
    </select>
    <select id="checkKeyUnique" resultType="com.tairui.function.domain.SystemSettings">
        select id, name, code, srttings
        from `key`
        where name = #{name}
          and code = #{code}
          and srttings = #{srttings} limit 1
    </select>
    <select id="listKeyByUser" resultMap="KeyResult">
        select *,ss.cabinetName as srttingsName
        from `key` as k
        left join key_user as ku on ku.keyId = k.position
        left join `user` as u on ku.userId = u.id
        left join system_settings as ss on k.srttings = ss.id
        where 1=1
        <if test="userId != null and userId != ''">and ku.userId = #{userId}</if>
        <if test="status != null and status != ''">and k.status = #{status}</if>
        <if test="userName != null  and userName != ''">and u.userName = #{userName}</if>
        <if test="settingId != null  and settingId != ''">and k.srttings = #{settingId}</if>
    </select>

    <select id="selectBoundKeysByUser" resultType="com.tairui.function.domain.Key">
        SELECT k.*
        FROM `key` k
        INNER JOIN key_user ku ON ku.keyId = k.id
        <where>
            <if test="userId != null and userId != ''">
                ku.userId = #{userId}
            </if>
        </where>
    </select>

    <select id="selectKeyListByKeyIdAndUserId" resultType="com.tairui.function.domain.Key">
        select *
        from `key` as k
        left join key_user as ku on ku.keyId = k.id
        where k.name !='未命名编号'
        <if test="id != null and id != ''">and k.id = #{id}</if>
        <if test="userId != null and userId != ''">and ku.userId = #{userId}</if>
        <if test="status != null and status != ''">and k.status = #{status}</if>
    </select>

    <select id="selectTodayUseKeyCount" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT COUNT(*)
        FROM key_workflow_detail AS kwd
                 INNER JOIN key_workflow AS kw ON kwd.key_workflow_id = kw.id
        WHERE kw.apply_user_id = #{userId}
          AND kwd.status = #{status}
          AND kwd.apply_type = #{applyType}
          AND kwd.update_time >= CURDATE()
          AND kwd.update_time &lt; CURDATE() + INTERVAL 1 DAY
    </select>
    <select id="selectKeyAndKeyCabinetAndBindingStatusAndLastBorrowApply"
            parameterType="com.tairui.function.domain.pojo.KeyAndKeyCabinetAndBindingStatusAndLastBorrowPOJO"
            resultType="com.tairui.function.domain.pojo.KeyAndKeyCabinetAndBindingStatusAndLastBorrowPOJO">
        SELECT
        k.id AS keyId,
        k.name AS keyName,
        k.code As keyCode,
        k.`position` AS `keyPosition`,
        k.usageLocation AS keyUsageLocation,
        k.`status` AS `keyStatus`,
        k.tag AS keyTag,
        k.currentTag AS keyCurrentTag,
        k.controlPanelAddress AS keyControlPanelAddress,
        k.circuitPanelAddress AS keyCircuitPanelAddress,
        k.createAt AS keyCreateAt,
        k.lastControlUserId AS keyLastControlUserId,
        sss.id AS keyCabinetId,
        sss.cabinetName AS keyCabinetName,
        sss.addressLocation AS keyCabinetAddressLocation,
        kwd_last.status AS lastBorrowingWorkflowDetailsStatus,
        kwd_last.apply_type AS lastKeyWorkflowDetailApplyType,
        IF(ku_for_user.userId IS NULL, 0, 1) AS isBinding
        FROM `key` k
        INNER JOIN system_settings sss ON k.srttings = sss.id
        <if test="keyCabinetId != null and keyCabinetId != ''">
            AND sss.id = #{keyCabinetId}
        </if>
        <if test="keyCabinetIds != null and !keyCabinetIds.isEmpty()">
            AND sss.id IN
            <foreach collection="keyCabinetIds" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        LEFT JOIN key_workflow_detail kwd_last
        ON kwd_last.key_id = k.id
        AND kwd_last.update_time = (
        SELECT MAX(kwd2.update_time)
        FROM key_workflow_detail kwd2
        WHERE kwd2.key_id = k.id
        AND kwd2.apply_type = #{lastKeyWorkflowDetailApplyType}
        )
        LEFT JOIN key_user ku_for_user
        ON ku_for_user.keyId = k.id
        <if test="userId != null and userId != ''">
            AND ku_for_user.userId = #{userId}
        </if>
        <where>
            <choose>
                <when test="keyName != null and keyName != ''">
                    k.name = #{keyName}
                </when>
                <otherwise>
                    k.name != '未命名编号'
                </otherwise>
            </choose>
        </where>
    </select>
    <select id="selectKeyIdsByKeyCabinetId" resultType="java.lang.Integer">
        select k.id
        from `key` k
        where k.srttings = #{keyCabinetId} and k.name !='未命名编号';
    </select>
    <select id="selectKeyIdsByUserId" resultType="java.lang.Integer">
        select ku.keyId
        from key_user ku
        where ku.userId = #{userId};
    </select>


    <insert id="insertKey" parameterType="Key" useGeneratedKeys="true" keyProperty="id">
        insert into `key`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="code != null and code != ''">code,</if>
            <if test="position != null">position,</if>
            <if test="usageLocation != null">usageLocation,</if>
            <if test="tag != null">tag,</if>
            <if test="currentTag != null">currentTag,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="controlPanelAddress != null">controlPanelAddress,</if>
            <if test="circuitPanelAddress != null">circuitPanelAddress,</if>
            <if test="createAt != null">createAt,</if>
            <if test="lastControlUserId != null">lastControlUserId,</if>
            <if test="srttings != null">srttings,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="code != null and code != ''">#{code},</if>
            <if test="position != null">#{position},</if>
            <if test="usageLocation != null">#{usageLocation},</if>
            <if test="tag != null">#{tag},</if>
            <if test="currentTag != null">#{currentTag},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="controlPanelAddress != null">#{controlPanelAddress},</if>
            <if test="circuitPanelAddress != null">#{circuitPanelAddress},</if>
            <if test="createAt != null">#{createAt},</if>
            <if test="lastControlUserId != null">#{lastControlUserId},</if>
            <if test="srttings != null">#{srttings},</if>
        </trim>
    </insert>
    <insert id="insertKeyUser">
        INSERT INTO key_user (userId, keyId)
        VALUES (#{userId}, #{keyId});
    </insert>
    <insert id="batchBindKeys">
        INSERT INTO key_user (userId, keyId)
        SELECT
        u.id as userId,
        k.id as keyId
        FROM
        `user` u
        LEFT JOIN `system_settings` s ON FIND_IN_SET(s.id, u.srttings)
        LEFT JOIN `key` k ON k.srttings = s.id
        WHERE
        k.name != '未命名钥匙' and
        s.id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        ORDER BY
        u.id, k.id;
    </insert>

    <insert id="insertBatchKeyUser" parameterType="java.util.List">
        insert into key_user (userId, keyId)
        values
        <foreach collection="keyUserList" item="item" separator=",">
            (#{item.userId}, #{item.keyId})
        </foreach>
    </insert>


    <update id="updateKey" parameterType="Key">
        update `key`
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="code != null and code != ''">code = #{code},</if>
            <if test="position != null">position = #{position},</if>
            <if test="usageLocation != null">usageLocation = #{usageLocation},</if>
            <if test="tag != null">tag = #{tag},</if>
            <if test="currentTag != null">currentTag = #{currentTag},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="controlPanelAddress != null">controlPanelAddress = #{controlPanelAddress},</if>
            <if test="circuitPanelAddress != null">circuitPanelAddress = #{circuitPanelAddress},</if>
            <if test="createAt != null">createAt = #{createAt},</if>
            <if test="lastControlUserId != null">lastControlUserId = #{lastControlUserId},</if>
            <if test="srttings != null">srttings = #{srttings},</if>
        </trim>
        where id = #{id}
    </update>
    <update id="initKeyApi">
        UPDATE `key`
        SET name   = '未命名钥匙',
            code   = '未命名编号',
            status = 'unbound'
        WHERE id = #{keyId}
    </update>

    <delete id="deleteKeyById" parameterType="Long">
        delete
        from `key`
        where id = #{id}
    </delete>

    <delete id="deleteKeyByIds" parameterType="String">
        delete from `key` where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteKeyUser">
        delete
        from `key_user`
        where keyId = #{keyId}
    </delete>

    <delete id="batchUnBindKeys" parameterType="java.lang.String">
        DELETE
        FROM key_user
        WHERE keyId IN (SELECT id
                        FROM `key`
                        WHERE srttings IN (${srttings}))
    </delete>
    <delete id="batchUnBindKeysByUserId">
        DELETE FROM key_user
        WHERE userId = #{userId}
        AND keyId IN
        <foreach collection="keyIds" item="keyId" open="(" separator="," close=")">
            #{keyId}
        </foreach>
    </delete>


</mapper>
